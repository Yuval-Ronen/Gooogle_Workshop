{"version":3,"sources":["components/trivia-card/trivia-card.module.css","components/movie-displayer/movie-displayer.module.css","components/actor-displayer/actor-displayer.module.css","components/home/home.module.css","components/post-answer-card/post-answer-card.module.css","components/hint-box/hint-box.module.css","components/hint-result/hint-result.module.css","components/header/header.module.css","components/score-tracker/score-tracker.module.css","components/header/header.component.jsx","server-connector.js","components/trivia-card/trivia-card.component.jsx","components/score-tracker/score-tracker.component.jsx","components/movie-displayer/movie-displayer.component.jsx","components/actor-displayer/actor-displayer.component.jsx","components/post-answer-card/post-answer-card.component.jsx","components/hint-result/hint-result.component.jsx","components/hint-box/hint-box.component.jsx","components/home/home.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","style","container","serverConnector","delayBy","a","timeout","Promise","resolve","setTimeout","checkConnectivity","fetch","serverUrl","res","status","getQuestion","json","question","getMovie","moviesId","movie","getActor","actorId","actor","getMovieByDescriptionSearch","desc","method","headers","body","JSON","stringify","description","movies","autoComplete","string","type","data","theme","createMuiTheme","palette","primary","amber","TriviaCard","header","checkAnswer","useState","setAutoComplete","submitYourAnswer","e","preventDefault","document","getElementById","value","fillAutoComplete","str","answerType","autoCompleteList","console","log","length","loading","questionText","answerBox","questionType","answerInput","src","imgPath","alt","id","noValidate","onSubmit","ThemeProvider","Autocomplete","options","getOptionLabel","option","width","renderInput","params","TextField","label","variant","color","onChange","target","warning","answerBtn","Button","onClick","Event","multiChoices","map","ans","btnWrapper","anserBoxBuild","ScoreTracker","score","MovieDisplayer","size","title","runTime","midSection","bigImg","img","posterPath","bigDescription","overview","rating","ganres","genres","ActorDisplayer","actorName","profilePath","popularity","lastAppearances","PostAnswerCard","mood","answerId","procceed","displayDetails","setDisplayDetails","useEffect","then","goodHeader","badHeader","movieArea","HintResult","listOfMovies","index","movieResult","HintBox","setMovies","hintText","setHintText","askForData","search","onKeyPress","event","key","searchIcon","placeholder","inputProps","Copyright","Typography","align","Date","getFullYear","Home","currScore","setCurrScore","postQuestionMode","setPostQuestionMode","gameOver","setGameOver","qNumber","setQNumber","QA","setQ","connected","setConnected","failedOnFirst","setFoF","setLoading","goodFlow","badFlow","background","loadingAnimation","answer","toLowerCase","footer","notConnected","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9ecb9fa3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"trivia-card_container__1WmmY\",\"header\":\"trivia-card_header__2dhop\",\"question\":\"trivia-card_question__3hp4Y\",\"btnWrapper\":\"trivia-card_btnWrapper__qpxWL\",\"answerInput\":\"trivia-card_answerInput__1OyyU\",\"answerBtn\":\"trivia-card_answerBtn__2vJoM\",\"a\":\"trivia-card_a__3Ctnx\",\"loading\":\"trivia-card_loading__1eWOC\",\"show\":\"trivia-card_show__25y-V\",\"warning\":\"trivia-card_warning__Ww2JB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"movie-displayer_container__rA0Uf\",\"title\":\"movie-displayer_title__2EEbZ\",\"length\":\"movie-displayer_length__2QLmh\",\"midSection\":\"movie-displayer_midSection__U2smN\",\"bigImg\":\"movie-displayer_bigImg__pd4Vi\",\"img\":\"movie-displayer_img__2F-82\",\"bigDescription\":\"movie-displayer_bigDescription__3qB03\",\"description\":\"movie-displayer_description__sRZfw\",\"rating\":\"movie-displayer_rating__15IE3\",\"actors\":\"movie-displayer_actors__cjtM6\",\"ganres\":\"movie-displayer_ganres__21iDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"actor-displayer_container__iUuoi\",\"title\":\"actor-displayer_title__Nha_b\",\"length\":\"actor-displayer_length__1vIGw\",\"midSection\":\"actor-displayer_midSection__2VgoM\",\"img\":\"actor-displayer_img__3LBHf\",\"rating\":\"actor-displayer_rating__3yfzO\",\"actors\":\"actor-displayer_actors__vHNeD\",\"ganres\":\"actor-displayer_ganres__2irYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"home_background__3s9yF\",\"name_tiles\":\"home_name_tiles__kXlX6\",\"name_tile\":\"home_name_tile__k4SMR\",\"footer\":\"home_footer__2gSjk\",\"notConnected\":\"home_notConnected__2YB_U\",\"loading\":\"home_loading__255nH\",\"loadingAnimation\":\"home_loadingAnimation__38Zu2\",\"spinLoader\":\"home_spinLoader__4abG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"post-answer-card_container__1wE3s\",\"badHeader\":\"post-answer-card_badHeader__3ejl2\",\"goodHeader\":\"post-answer-card_goodHeader__3MhAY\",\"question\":\"post-answer-card_question__2jjya\",\"movieArea\":\"post-answer-card_movieArea___bS_H\",\"answerBtn\":\"post-answer-card_answerBtn__qbSkG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"hint-box_container__MX-6x\",\"hintText\":\"hint-box_hintText__1iW9e\",\"search\":\"hint-box_search__3M78l\",\"searchIcon\":\"hint-box_searchIcon__12cRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"hint-result_container__3B7z6\",\"movieResult\":\"hint-result_movieResult__1Vif4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__Qg6Mi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"score-tracker_container__3foXr\"};","import React from 'react';\nimport style from './header.module.css';\n\nconst Header = () => {\n    return <div className={style.container}>\n        <h1>Our movies project</h1>\n    </div>\n\n}\n\nexport default Header;\n","// const serverUrl = \"http://localhost:45556\";\nconst serverUrl = \"\";\n\n\nconst serverConnector = {\n    delayBy: async (timeout = 100) => {\n        return new Promise(resolve => setTimeout(resolve, timeout));\n    },\n    checkConnectivity: async () =>{        \n        try {\n            let res = await fetch(serverUrl+\"/api/connect\");\n            return res.status == 200;\n        } catch {\n            return false;\n        }\n    },\n    getQuestion: async () =>{        \n        let res = await fetch(serverUrl+\"/api/getQuestion\");\n        let question = await res.json();\n        return question; \n    },\n\n    getMovie: async (moviesId) =>{\n        let res = await fetch(serverUrl+\"/api/getMovie/\" + moviesId);\n        let movie = await res.json();\n        return movie[\"result\"];\n    },\n\n    getActor: async (actorId) =>{\n        let res = await fetch(serverUrl+\"/api/getActor/\" + actorId);\n        let actor = await res.json();\n        return actor[\"result\"];\n    },\n\n    getMovieByDescriptionSearch: async (desc) => {\n        let res = await fetch(serverUrl + \"/api/moviesByDesc/\",{\n            method: 'POST',\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body: JSON.stringify({\n                description: desc\n            })\n        })\n        let movies = await res.json();\n        return movies[\"result\"];\n    },\n    autoComplete: async (string, type) => {\n        let res = await fetch(serverUrl + \"/api/autoComplete/\",{\n            method: 'POST',\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body: JSON.stringify({\n                type: type,\n                string: string\n            })\n        })\n        let data = await res.json();\n        return data[\"result\"];    \n    }    \n}\nexport default serverConnector;","import React, { useState } from 'react';\nimport style from './trivia-card.module.css';\nimport {  ThemeProvider ,createMuiTheme } from '@material-ui/core/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport { amber } from '@material-ui/core/colors';\nimport TheaterIcon from '@material-ui/icons/Theaters';\n\nimport { Autocomplete } from '@material-ui/lab';\nimport serverConnector from '../../server-connector';\n\nconst theme = createMuiTheme({    \n    palette: {\n        type:\"dark\",\n        primary: amber,                  \n    },\n  });\n\nconst TriviaCard = ({header, question, checkAnswer}) => {\n    const [autoComplete, setAutoComplete] = useState([\"-No results-\"]);\n\n    const submitYourAnswer = e =>{\n        e.preventDefault();\n        checkAnswer(document.getElementById(\"answer-input\").value)\n    }    \n\n    const fillAutoComplete = async str =>{                \n        let autoCompleteList = await serverConnector.autoComplete(str, question.answerType);\n        console.log(autoCompleteList);\n        if(!autoCompleteList || autoCompleteList.length  ===0){\n            setAutoComplete([\"Loading data...\"]);\n        } else {\n            setAutoComplete(autoCompleteList);\n        }\n                \n    }    \n\n    const anserBoxBuild = () => {\n        let answerBox;\n\n        switch (question.questionType) {\n            case \"photo\":\n                answerBox = <div>\n                    <div className={style.answerInput}>\n                        <img src={question.imgPath} alt=\"Who is it?\" />\n                        <form id=\"form\" noValidate autoComplete=\"off\" onSubmit={submitYourAnswer}>\n                        <ThemeProvider theme={theme}>\n                            <Autocomplete\n                                id=\"answer-input\"\n                                options={autoComplete}\n                                getOptionLabel={(option) => option}\n                                style={{ width: 300 }}\n                                renderInput={(params) => \n                                <TextField\n                                {...params}\n                                    id=\"\"\n                                    label=\"Your answer\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onChange={e=>{fillAutoComplete(e.target.value)}}\n                                />\n                            }\n                            />                           \n                            </ThemeProvider>\n                        </form>\n                        <p className={style.warning}>(Type your answer slowly, we don't want to make it too hard on the server...)</p>\n                    </div>\n                    <div className={style.answerBtn}>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                            submitYourAnswer(new Event('submit'));\n                        }}>Submit your Answer</Button>\n                    </div>\n                </div>\n\n                break;\n            case \"multiChoice\":\n                answerBox = <div className={style.answerInput}>\n                    {\n                        question.multiChoices.map(ans =>\n                            <div className={style.btnWrapper} key={ans}>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                                    checkAnswer(ans);\n                                }}>{ans}</Button>\n                            </div>\n                    )}\n                </div>\n                break;\n\n            case \"text\":\n                answerBox = <div>\n                    <div className={style.answerInput}>\n                        <form id=\"form\" noValidate autoComplete=\"off\" onSubmit={submitYourAnswer}>\n                        <ThemeProvider theme={theme}>\n                            <Autocomplete\n                                id=\"answer-input\"\n                                options={autoComplete}\n                                getOptionLabel={(option) => option}\n                                style={{ width: 300 }}\n                                renderInput={(params) => \n                                <TextField\n                                {...params}\n                                    id=\"\"\n                                    label=\"Your answer\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    onChange={e=>{fillAutoComplete(e.target.value)}}\n                                />\n                            }\n                            />                           \n                            </ThemeProvider>\n                        </form>\n                        <p className={style.warning}>(Type your answer slowly, we don't want to brake the server...)</p>\n                    </div>\n                    <div className={style.answerBtn}>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                            submitYourAnswer(new Event('submit'));\n                        }}>Submit your Answer</Button>\n                    </div>\n                </div>\n                break;\n\n            default:  // \"text\" case\n                answerBox = <div>\n                        <div className={style.answerInput}>\n                            <form id=\"form\" noValidate autoComplete=\"off\" onSubmit={submitYourAnswer}>\n                                <ThemeProvider theme={theme}>\n                                    <TextField\n                                        id=\"answer-input\"\n                                        label=\"Your answer\"\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                    />\n                                </ThemeProvider>\n                            </form>\n                        </div>\n                        <div className={style.answerBtn}>\n\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n                                submitYourAnswer(new Event('submit'));\n                            }}>Submit your Answer</Button>\n                        </div>\n                    </div>\n                break;\n        }       \n        return answerBox;\n    }\n\n    return <div className={style.container}>\n        <div className={style.loading} />\n        <div className={style.header}>\n            <TheaterIcon />{header}\n        </div>\n        <div className={style.question}>\n            {question.questionText}\n        </div>\n        {anserBoxBuild()}\n        \n        \n    </div>\n}\n\nexport default TriviaCard;","import React from 'react';\nimport style from './score-tracker.module.css';\n\nconst ScoreTracker = ({score}) =>{\n    return (\n        <div className={style.container}>\n            Your score is {score}\n        </div>\n    )\n}\n\nexport default ScoreTracker;","import React from 'react';\nimport style from './movie-displayer.module.css'; \nimport StarRateIcon from '@material-ui/icons/StarRate';\n\nconst MovieDisplayer = ({movie, size}) => { \n    \n    return <div className={style.container}>\n        <div className={style.title}>\n            {movie.title}\n               <div className={style.length}>{movie.runTime + \" min\"}</div>\n        </div>\n        <div className={style.midSection}>         \n        <div className={size===\"big\" ? style.bigImg : style.img} >\n            <img src={movie.posterPath} alt=\"answer-pic\"/>\n        </div>\n        <div className={size===\"big\" ? style.bigDescription: style.description}>{movie.overview}</div>\n        </div>\n        <div className={style.rating}>\n            <StarRateIcon />\n            <div>{movie.rating}</div>\n        </div>\n        <div className={style.ganres}>\n            <div><span>Genres:</span> {movie.genres}</div>\n        </div>        \n    </div>\n}\n\nexport default MovieDisplayer;","import React from 'react';\nimport style from './actor-displayer.module.css'; \nimport StarRateIcon from '@material-ui/icons/StarRate';\n\nconst ActorDisplayer = ({actor}) => { \n\n    return <div className={style.container}>\n        <div className={style.title}>\n            {actor.actorName}\n        </div>\n        <div className={style.midSection}>         \n        <div className={style.img} >\n            <img src={actor.profilePath} alt=\"answer-pic\"/>\n        </div>\n        </div>\n        <div className={style.rating}>\n            <StarRateIcon />\n            <div>{actor.popularity}</div>\n        </div>\n        <div className={style.ganres}>\n            <div><span>Last appearances:</span> {actor.lastAppearances}</div>\n        </div>        \n    </div>\n}\n\nexport default ActorDisplayer;\n                ","import React, { useState, useEffect } from 'react';\nimport style from './post-answer-card.module.css';\nimport { Button } from '@material-ui/core';\nimport TheaterIcon from '@material-ui/icons/Theaters';\nimport serverConnector from '../../server-connector';\nimport MovieDisplayer from '../movie-displayer/movie-displayer.component';\nimport ActorDisplayer from '../actor-displayer/actor-displayer.component';\n\nconst PostAnswerCard = ({mood, answerId, procceed, answerType}) => {\n    \n    const [displayDetails, setDisplayDetails] = useState({});\n    \n    useEffect(() =>{\n        if(answerType === \"movie\"){\n            console.log(\"get movie?\");\n            serverConnector.getMovie(answerId).then(res =>{\n                setDisplayDetails(res);\n            })\n        } else {\n            serverConnector.getActor(answerId).then(res => {\n                setDisplayDetails(res);\n            });\n        }\n        \n    }, [answerId, answerType]);\n\n    return <div className={style.container}>\n        <div className={mood ? style.goodHeader : style.badHeader}>\n            <TheaterIcon />{ mood ?  \"EXCELLENT WORK!\":\"TOO BAD\"} \n        </div>\n        {!mood && \"Maybe you will have more luck next time!\"}\n      \n\n\n        <div className={style.movieArea}>\n            {answerType === \"movie\" ? \n                <MovieDisplayer movie={displayDetails} size=\"big\"/> :\n                <ActorDisplayer actor={displayDetails} />\n            }\n        </div>\n        \n        <div className={style.answerBtn}>\n        \n        <Button variant=\"contained\" color=\"primary\" onClick={() =>{\n            procceed(mood);\n        }}>{mood ? \"NEXT QUESTION\":\"START OVER\"}</Button>        \n        </div>\n    </div>\n}\n\nexport default PostAnswerCard;","import React from 'react';\nimport style from './hint-result.module.css';\nimport MovieDisplayer from '../movie-displayer/movie-displayer.component';\n\nconst HintResult = ({listOfMovies}) => {\n\n\n    return <div className={style.container}>      \n    { listOfMovies?.length >0 && listOfMovies.map((movie, index) => \n    <div key={movie.title + index} className={style.movieResult}>\n        <MovieDisplayer movie={movie} size=\"small\" />\n    </div> )\n    }  \n        \n    </div>\n}\n\nexport default HintResult;","import React, { useState }from 'react';\nimport style from './hint-box.module.css';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { amber } from '@material-ui/core/colors';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport HintResult from '../hint-result/hint-result.component';\nimport serverConnector from '../../server-connector';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: amber,\n    },\n});\n\nconst HintBox = () => {\n\n    const [movies, setMovies] = useState([]);\n    const [hintText, setHintText] = useState(\"\");    \n\n    const askForData = () =>{\n                \n        serverConnector.getMovieByDescriptionSearch(hintText).then(res => {\n            setMovies(hintText ?  res : []);                \n        })\n    }    \n\n    const handleKeyPress = event =>{\n        if(event.key === 'Enter'){\n            askForData();\n        }\n    }\n\n    return <div className={style.container}>\n        <h2>Need a hint?</h2>\n        <div className={style.hintText}>Here you can search for the movies you have in mind, maybe you will find some answers...</div>\n        <div className={style.hintText}>(Try searching movie's description)</div>\n\n\n        <div className={style.search} onKeyPress={handleKeyPress}>\n            <div className={style.searchIcon} onClick={askForData}>\n                <SearchIcon />\n            </div>\n            <ThemeProvider theme={theme}>\n                <input\n                    placeholder=\"Search…\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={e=>setHintText(e.target.value)}\n                />\n            </ThemeProvider>\n        </div>\n        <HintResult listOfMovies={movies}/>\n    </div>\n}\n\nexport default HintBox;","import React, { useEffect, useState } from 'react';\nimport style from './home.module.css';\nimport TriviaCard from '../trivia-card/trivia-card.component';\nimport ScoreTracker from '../score-tracker/score-tracker.component';\nimport serverConnector from '../../server-connector';\nimport PostAnswerCard from '../post-answer-card/post-answer-card.component';\nimport { Typography } from '@material-ui/core';\nimport HintBox from '../hint-box/hint-box.component';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"inherit\" align=\"center\">\n      {'Copyright © '} Maor, Yuval, Dov & Ron {' '} {new Date().getFullYear()}      {'.'}\n    </Typography>\n  );\n}\n\nconst Home = () => {\n  const [currScore, setCurrScore] = useState(0);\n  const [postQuestionMode, setPostQuestionMode] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [qNumber, setQNumber] = useState(0);\n  const [QA, setQ] = useState({});\n  const [connected, setConnected] = useState(false);\n  const [failedOnFirst, setFoF] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() =>{\n    serverConnector.checkConnectivity().then(res =>{\n      setConnected(res)\n    })\n  },[])\n\n  useEffect(()=>{\n    setLoading(true);    \n    serverConnector.getQuestion().then(res =>{\n      console.log(res);\n      setQ(res);\n      setLoading(false);\n    })\n  },[qNumber]);\n\n  useEffect(() =>{\n    if(failedOnFirst){\n      setLoading(true);    \n      serverConnector.getQuestion().then(res =>{\n        console.log(res);\n        setQ(res);\n        setFoF(false);\n        setLoading(false);\n\n      })\n    }\n  },[failedOnFirst])\n\n    const procceed = mood =>{\n      mood ? goodFlow() : badFlow();      \n    }\n\n    const goodFlow = () => {\n      setQNumber(qNumber +1);\n      setPostQuestionMode(false);\n    }\n\n    const badFlow = () =>{\n      if(currScore === 0){\n        setFoF(true);\n      }\n      setQNumber(0);\n      setPostQuestionMode(false);\n      setGameOver(false);\n    }\n\n    const checkAnswer = answer => {\n      let won = answer.toLowerCase() === QA.answer.toLowerCase();\n      if(won){\n        setCurrScore(currScore + 1)\n      } else {\n        setGameOver(true);\n        setCurrScore(0);      \n      }       \n      setPostQuestionMode(true);       \n    } \n    \n      return (         \n        <div>        \n        <div className={style.background} />\n        {!connected ? <h1 className={style.notConnected}>Not connected</h1> : <div> \n        {loading && <div className={style.loading}>\n          <h2>Assembling a question for you!</h2>\n          <div>it might take a few seconds...</div>\n          <div className={style.loadingAnimation}></div>\n        </div>}\n        {postQuestionMode ?\n        <PostAnswerCard mood={!gameOver} answerId={QA.answerId} answerType={QA.answerType} procceed={procceed} /> :\n        <TriviaCard\n          header={\"QUESTION NUMBER \" + (qNumber +1)}\n          question={QA}\n          checkAnswer ={checkAnswer}                   \n        />}\n        <HintBox />\n        <div className={style.footer}>\n        <ScoreTracker score={currScore} />\n        <Copyright />        \n        </div>\n        </div>}\n        </div>\n    )  \n}\n\nexport default Home;\n","import './App.css';\n\nimport Header from './components/header/header.component';\nimport Home from './components/home/home.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}